{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clockName","props","name","today","Date","timer","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","debug","clearInterval","className","React","PureComponent","getRandomName","value","now","toString","App","hasClock","timerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAe,CACbC,UAAW,EAAKC,MAAMC,KACtBC,MAAO,IAAIC,MAHf,EAMEC,MAAQ,EANV,uDAQE,WAA2B,IAAD,OACxBC,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKZ,MAAMI,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAbP,gCAgBE,SACEC,GAEIA,EAAUZ,OAASI,KAAKL,MAAMC,MAEhCQ,QAAQK,MAAR,uBAA8BD,EAAUZ,KAAxC,eAAmDI,KAAKL,MAAMC,SArBpE,kCAyBE,WACEK,OAAOS,cAAcV,KAAKD,SA1B9B,oBA8BE,WACE,OACE,sBACEY,UAAU,QADZ,UAGE,wBAAQA,UAAU,cAAlB,SACGX,KAAKP,MAAMC,YAGb,YAED,sBAAMiB,UAAU,cAAhB,SACGX,KAAKP,MAAMI,MAAMS,cAAcC,OAAO,IAAK,YA1CtD,GAA2BK,IAAMC,eCPjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAQX,IAAMG,EAAb,4MACEzB,MAAe,CACb0B,UAAU,EACVzB,UAAW,WAHf,EAME0B,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,eACxB,SAACC,GACCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEgB,UAAU,OAG9BnB,KAAKoB,QAAUnB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAET,UAAWoB,QAC1B,MAEHO,SAASC,iBAAiB,SACxB,kBAAM,EAAKnB,SAAS,CAAEgB,UAAU,SApBtC,oBAuBE,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECX,KAAKP,MAAM0B,UACV,cAAC,EAAD,CACEvB,KAAMI,KAAKP,MAAMC,mBA9B7B,GAAyBkB,IAAMC,eCZ/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.11975abc.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\n\ninterface Props {\n  name: string;\n}\n\ninterface State {\n  clockName: string;\n  today: Date;\n}\n\nexport class Clock extends React.PureComponent<Props> {\n  state: State = {\n    clockName: this.props.name,\n    today: new Date(),\n  };\n\n  timer = 0;\n\n  componentDidMount(): void {\n    this.timer = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n  ): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timer);\n    // window.clearInterval(this.timerId);\n  }\n\n  render(): ReactNode {\n    return (\n      <div\n        className=\"Clock\"\n      >\n        <strong className=\"Clock__name\">\n          {this.state.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.PureComponent {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu',\n      (event) => {\n        event.preventDefault();\n        this.setState({ hasClock: false });\n      });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click',\n      () => this.setState({ hasClock: true }));\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock\n            name={this.state.clockName}\n          />\n        )}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}